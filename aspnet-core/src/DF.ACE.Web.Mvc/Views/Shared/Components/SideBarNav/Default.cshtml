@using Abp.Collections.Extensions
@using DF.ACE.Web.Views
@using DF.ACE.Web.Views.Shared.Components.SideBarNav

@model SideBarNavViewModel
@{
    var calculateMenuUrl = new Func<string, string>((url) =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });
}
<div class="m-grid__item m-grid__item--fluid m-grid m-grid--ver-desktop m-grid--desktop m-body">

    <div id="m_aside_left" class="m-grid__item	m-aside-left  m-aside-left--skin-dark ">
        <div id=" menu m_ver_menu" class="m-aside-menu  m-aside-menu--skin-dark m-aside-menu--submenu-skin-dark " m-menu-vertical="1" m-menu-scrollable="1" m-menu-dropdown-timeout="500" style="position: relative;">
            <ul class="list m-menu__nav  m-menu__nav--dropdown-submenu-arrow ">
                @foreach (var menuItem in Model.MainMenu.Items)
                {
                    <li class="m-menu__item @(Model.ActiveMenuItemName == menuItem.Name ? "m-menu__item--active" : "")" aria-haspopup="true">
                        @if (menuItem.Items.IsNullOrEmpty())
                        {
                            <a class="m-menu__link m-menu__toggle" href=" @calculateMenuUrl(menuItem.Url)">
                                @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                                {
                                    <i class=" m-menu__link-icon material-icons">@menuItem.Icon</i>
                                }
                                <span class="m-menu__link-text">@menuItem.DisplayName</span>
                            </a>
                        }
                        else
                        {
                            <a href="javascript:void(0);" class=" m-menu__link m-menu__toggle menu-toggle">
                                @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                                {
                                    <i class="m-menu__link-icon material-icons">@menuItem.Icon</i>
                                }
                                <span class="m-menu__link-text">@menuItem.DisplayName</span>
                                <i class="m-menu__ver-arrow la la-angle-right"></i>
                            </a>
                            <div class="m-menu__submenu ">
                                <ul class="m-menu__subnav">
                                    @foreach (var subMenuItem in menuItem.Items)
                                    {
                                        <li class="m-menu__item  m-menu__item--submenu @(Model.ActiveMenuItemName == subMenuItem.Name ? "m-menu__item--active" : "")">
                                            @if (subMenuItem.Items.IsNullOrEmpty())
                                            {
                                                <a href="@calculateMenuUrl(subMenuItem.Url)" class="m-menu__link m-menu__toggle">
                                                    @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                                    {
                                                        <i class="m-menu__link-icon material-icons material-icons">@subMenuItem.Icon</i>
                                                    }
                                                    <span class="m-menu__link-text">@subMenuItem.DisplayName</span>
                                                </a>
                                            }
                                            else
                                            {
                                                <a href="javascript:void(0);" class=" m-menu__link m-menu__toggle menu-toggle">
                                                    @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                                    {
                                                        <i class="m-menu__link-icon material-icons">@subMenuItem.Icon</i>
                                                    }
                                                    <span class="m-menu__link-text">@subMenuItem.DisplayName</span>
                                                    <i class="m-menu__ver-arrow la la-angle-right"></i>
                                                </a>
                                                <div class="m-menu__submenu ">
                                                    <span class="m-menu__arrow"></span>
                                                    <ul class="m-menu__subnav">
                                                        @foreach (var subSubMenuItem in subMenuItem.Items)
                                                        {
                                                            <li class=" m-menu__item @(Model.ActiveMenuItemName == subSubMenuItem.Name ? "m-menu__item--active" : "")" aria-haspopup="true">
                                                                <a href="@calculateMenuUrl(subSubMenuItem.Url)" class="m-menu__link">
                                                                    <i class="m-menu__link-bullet m-menu__link-bullet--dot"><span></span></i>
                                                                    <span class="m-menu__link-text">@subMenuItem.DisplayName</span>
                                                                </a>
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

